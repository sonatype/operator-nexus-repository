apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "sonatype.com/v1alpha1",
          "kind": "NexusRepo",
          "metadata": {
            "name": "nexusrepo-sample"
          },
          "spec": {
            "ingress": {
              "additionalRules": null,
              "annotations": null,
              "defaultRule": "false",
              "dockerIngress": {
                "annotations": null,
                "enabled": "false",
                "host": "example.com",
                "name": "nexus-docker-ingress"
              },
              "dockerSubdomain": false,
              "enabled": "false",
              "host": "example.com",
              "name": "nexus-ingress",
              "tls": {
                "enabled": "false",
                "secretName": "tlsSecretName"
              }
            },
            "license": {
              "fileContentsBase64": "your_license_file_contents_in_base_64",
              "secretName": "nexus-repo-license"
            },
            "nexusData": {
              "local": {
                "accessMode": "ReadWriteOnce",
                "enabled": "true",
                "pv": {
                  "matchNodes": "example-node-1 example-node-2 example-node-3",
                  "name": "nexusrepo-local-storage-pv",
                  "size": "200Gi"
                },
                "storageClass": {
                  "provisioner": "kubernetes.io/no-provisioner"
                }
              },
              "nfs": {
                "accessMode": "ReadWriteMany",
                "enabled": "false",
                "pv": {
                  "mountOptions": [
                    "hard",
                    "nfsvers=4.1"
                  ],
                  "mountPath": "/nexusdata/mountPath",
                  "name": "nexusrepo-nfs-storage-pv",
                  "server": {
                    "ip": "70.71.156.85"
                  },
                  "size": "200Gi"
                },
                "storageClass": {
                  "provisioner": "nfs-provisioner"
                }
              },
              "pv": {
                "directoryPrefix": "/var/nexus-repo-mgr-work-dir/work"
              },
              "pvc": {
                "accessMode": "ReadWriteOnce",
                "size": "100Gi"
              },
              "storageClass": {
                "name": "nexusrepo-storage",
                "reclaimPolicy": "Retain"
              }
            },
            "service": {
              "docker": {
                "enabled": "false",
                "name": "nexus-repo-docker-service",
                "port": 9090,
                "protocol": "TCP",
                "targetPort": 8081,
                "type": "NodePort"
              },
              "nexus": {
                "enabled": "false",
                "name": "nexus-repo-service",
                "port": 80,
                "protocol": "TCP",
                "targetPort": 8081,
                "type": "NodePort"
              }
            },
            "statefulset": {
              "clusterName": "nexusrepo-cluster",
              "container": {
                "containerPort": 8081,
                "env": {
                  "clustered": true,
                  "install4jAddVmParams": "-Xms2703m -Xmx2703m",
                  "jdbcUrl": "jdbc:postgresql://your_database_server:5432/nexus",
                  "nexusInitialPassword": "nexusabc",
                  "password": "nexus",
                  "user": "nexus"
                },
                "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager:3.58.1-ubi-1",
                "pullPolicy": "IfNotPresent",
                "resources": {
                  "limits": {
                    "cpu": 4,
                    "memory": "8Gi"
                  },
                  "requests": {
                    "cpu": 4,
                    "memory": "8Gi"
                  }
                },
                "terminationGracePeriod": 20
              },
              "name": "nexusrepo-statefulset",
              "replicaCount": 2
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: "Integration & Delivery"
    description: |-
      Nexus Repository is the central source of control to efficiently manage all binaries
      and build artifacts across your DevOps pipeline.
    containerImage: {{operatorSHA}}
    repository: https://github.com/sonatype/operator-nexus-repository
    createdAt: 2023-08-14
    support: Sonatype
    certified: "true"
    olm.skipRange: "<{{operatorVersion}}"
  name: nexus-repository-ha-operator-certified.v{{operatorVersion}}
  namespace: placeholder
spec:
  relatedImages:
    - name: nexus-repository-ha-operator-certified
      image: {{operatorSHA}}
    - name: nexus-repository-manager
      image: {{certAppSHA}}
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: Nexus Repository
        displayName: NexusRepo
        kind: NexusRepo
        name: nexusrepos.sonatype.com
        version: v1alpha1
  description: |-
    Nexus Repository is the central source of control to efficiently manage all binaries
    and build artifacts across your DevOps pipeline.
    The flow of open source and third-party components into and through an organization
    creates a complex software supply chain.
    Nexus Repository delivers speed, efficiency, and quality to the governance
    and management of all dependencies, libraries, and applications for your DevOps teams.

    ## Core Capabilities

    * **Dependency Management**:
      Improves reliability with repeatable, fast access to secure dependencies
    * **Developer Productivity**:
      Streamline developer workflows by enabling the sharing of components and applications across teams
    * **Supply Chain Performance**:
      Improve speed-to-market and reduced build times with release advanced staging and component tagging
    * **CI/CD Integrations**:
      Increase DevOps scalability with integrations to the most popular build and deployment tools

    Version control systems and package registries do not scale when managing proprietary,
    open source, and third-party components.
    Organizations need a central binary and build artifact repository to manage dependencies
    across the entire software supply chain.

    ## Limitations

    This operator will be released on a quarterly basis.

    ## Controlling Automatic vs Manual Update

    If you use the default configuration for the Nexus Repository Operator installation,
    please notice that on any new operator release, the corresponding deployments are
    also updated without user intervention, resulting in unscheduled downtime.

    If you want to avoid this unscheduled downtime, we recommend installing the operator
    into **its own namespace** with **manual approval** for updates.

    ## Usage
    
    ### Pre-requisites for starting a Nexus Repository instance using this operator.
    
    1.) Create a Kubernetes Secret object named `nexus-repository-secret` in the same namespace/project that you intend to install this operator in.
     The Kubernetes Secret is used to configure Nexus Repository via the Helm chart values.yaml and must contain the following `stringData` entries: 

    | Parameter                                   | Description                                                                             |
    | ------------------------------------------  | ----------------------------------------------------------------------------------------|
    | `nexusJdbcUrl`                              |  The JDBC URL of a PostgreSQL database. E.g jdbc:postgresql://server_url:5432/nexus     | 
    | `nexusDatabaseUser`                         |  The database user                                                                      | 
    | `nexusDatabasePassword`                     |  The database password                                                                  |
    | `nexusInitialAdminPassword`                 |  The initial admin password                                                             | 
    | `nexus-repo-license`                        |  Base 64 encoded Nexus Repository PRO license                                           | 
    
    ** See example below:**
      apiVersion: v1
      kind: Secret
      metadata:
        name: nexus-repository-secret
        namespace: operator
      type: Opaque
      stringData:
        nexusJdbcUrl: "jdbc:postgresql://<your database server address>:5432/nexus"
        nexusDatabaseUser: nexus
        nexusDatabasePassword: nexus
        nexusInitialAdminPassword: nexus123
        nexus-repo-license: base_64_encoded_license
    
    2.) Create a Kubernetes ConfigMap object named `nexus-repository-config` in the same namespace/project that you intend to install this operator in.
     The Kubernetes ConfigMap should contain the following `data` entries:
    
    | Parameter                                   | Description                                                                                                                                                 |
    | ------------------------------------------  | ------------------------------------------------------------------------------------------------------------------------------------------------------------|
    | `nexus-pod-replicas`                        |  The number of Nexus Repository pods to start                                                                                                               | 
    | `local-storage-enabled`                     |  Whether to use local storage for the Nexus Repository pods. Set to "true" to enable, set to "false" to disable.                                            |
    | `node-names`                                |  The names of the nodes in your Open shift cluster. This is used for local volume node selector settings. This should be space delimited.                   |    
    | `local-pv-size`                             |  The persistent volume size for the local volume                                                                                                            | 
    | `pvc-size`                                  |  The persistent volume constraint size for the local volume                                                                                                 | 
    | `nexus-service-enabled`                     |  Whether to create Kubernetes Service objects for your Nexus Repository pods. Set to "true" to enable or "false" to disable                                 |
    | `nexus-ingress-enabled`                     |  Whether to create Kubernetes Ingress object for your Nexus Repository pods. Set to "true" to enable or "false" to disable                                  |
    | `nexus-ingress-add-defaultRule              |  Whether to add a rule to a Kubernetes Service or not. Set to "true" to enable or "false" to disable                                                        | 
    | `nexus-ingress-host                         |  The Ingress host setting                                                                                                                                   | 
    | `nfs-enabled                                |  Whether to use NFS storage for the Nexus Repository pods. Set to "true" to enable, set to "false" to disable.                                              | 
    | `nfs-provisioner`                           |  An NFS sub directory provisioner                                                                                                                           | 
    | `nfs-mount-path`                            |  The location to mount NFS                                                                                                                                  | 
    | `nfs-server-ip`                             |  The NFS server address                                                                                                                                     |
   
    **Note: the `local-storage-enabled` and `nfs-enabled` settings are mutually exclusive.**
    
    ** See example below:**
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: nexus-repository-config
        namespace: operator
      data:
        nexus-pod-replicas: "2"
        local-storage-enabled: "true"
        local-pv-size: "5Gi"
        pvc-size: "3Gi"
        storage-reclaim-policy: "Delete"
        node-names: "node-87z92-master-0 node-87z92-master-1 node-87z92-master-2"
        nfs-enabled: "false"
        nfs-provisioner: "nfs-provisioner"
        nfs-mount-path: "nfs-mount-path"
        nfs-server-ip: "nfs-server-ip"
        nexus-service-enabled: "true"
        nexus-ingress-enabled: "true"
        nexus-ingress-add-defaultRule: "true"
        nexus-ingress-host: "nexus-ingress.example.com"
    
    
    ### Additional configuration
    * Once the server instance is created by the operator and running, Nexus Repository can be further configured via the NexusRepo custom resource:

    | Parameter                                   | Description                         | Default                                 |
    | ------------------------------------------  | ----------------------------------  | ----------------------------------------|
    

  displayName: Nexus Repository HA Operator
  icon:
    - base64data: "iVBORw0KGgoAAAANSUhEUgAAAHAAAACACAYAAADTcu1SAAAACXBI\
      WXMAACE3AAAhNwEzWJ96AAAHQklEQVR4nO2dMXLbOBSGXzLb2/1yJqzJIr5BnNpFf\
      IP1DaJC/cq9ZyyfIPIJohSqbZ3ASiG3lmd0gNUJvAPNTy9XpCQSBB7wQHwzKWIqMc\
      WfxA/8APE+vL29UUgkaX5KROP1anm1+7Wy2XBARNPni5tVKF/5Y+UngknSfERESpy\
      /9nyLSyJaZLPhKJsNTytHBRKEgEmanydproT7m4hOKh/4Pyf4nBKy8pRKQ7SASZqn\
      SZo/EtEDEX2qfOAw6vM/stnwMZsNzw5+0mNECqh8LknzMRG9ENGXygfaof79UzYbT\
      iQ2q+IETNJ8AJ/7XjnYDeWbK+WP3N+pC2IEhM8tiOi2gc/psvXHbDZUQp7b/1bd+c\
      P3E1Q+p4YFRPStctAeyh8fstlwTkRXPg87vH0C4XMj+ByneGWUP75ks+HYV3/0UsA\
      kzVX3foHuvg98hz8OPDmfd7wSED6nhgU/NIYFtlH+eJvNhguf/NELATGem2A813VY\
      YJvP8MdpNhumrk/GuYDwucWB+MtXvsEfncZyzgRM0vyyRfzlM05jOXYBkzQ/g8/99\
      NDndCnHcqz+yCZgKf56EuBzunyBP7LFciwCWoy/9nG95+dTItpUfmoetljO6oSuGh\
      YQ0YSxqfxFRIP1ark3OcGTMWbsNL2qc3q+uJlWjhjAioCIvyaMTeVvCPdYObIHeNW\
      I8RznEHJROdIBowJiOcOAMUFRzeFovVqOK0cagt7jiLGVuFO/7/ni5p/KEQ2MCYj4\
      a8w4JNheiPVq2flCoFllv/GeL260b7yCzgLC58ZIKDjYzhAc8jldkKxwzny8Yrajc\
      dO/i7aA8LkRd2dgvVpa6QyUgT9y3pS/4I+tb8rWApZ8bsDUXG6wTJB9phyzDyNGW1\
      DDn3Ebf2wlIHyO0/Dv8dQZMXwd4I8jxjHsBk/jpHKkhkYCqvgLTQprl3u9Whrtcnc\
      B/sg5NJqjo3PQHw8KWKxyZvY51bNsdPe5AP7IGU7cQ8haf9wrIKZ5WH0OXuesuWwD\
      YjL267PrjxUBfYy/fMWHWO5dQAnxl69gZTdnH+Hu+eJmuz7nw5+fMie9LJ99TheGW\
      K7SlCoBz7EWhYNrST6nQymWM+2PtZ0ZLgGtxV++YjCW+w3fq7Ua2wK+QrjaX94HOs\
      RyjQb0tgTsPM0TGvDHprM1RyO1Iou2IaDz+MtXGsRyR9/F2M2iTQroXfzlKzWxXKN\
      pJbUUE0/xey/XhIBs0zyhAX9Mj/ncoSy6i4DOpnn6QpMsusuywkUUzx6lpZh7xSMJ\
      L3j2jbZZdBTQE3Sz6KA2+hGO1kRCFFA4UUDhRAGFEzsxADFXseXW4lAO6RNBCIig+\
      Nj76o+7URVEu8Kf8mzBV/X5yv/gIaE8gVcNe3BbUSxOurLTuyYU61emobze3atODJ\
      rap4Deze/VE3jJ+LIKG316AoMTj+I4UD5RQOH0fSD/iqHFCtt9qbHkKf4ugr4KOMe\
      qL/HLQPom4AaLh4JZv9MnAZV456b3aXFNnzox49DEo9gLlU8UUDhRQOFEAYUTBRRO\
      FFA4UUDhRAGFEwUUThRQOFFA4UQBhRMFFE4UUDhRQOFEAYUTBRROFFA4UUDhRAGFE\
      wUUTijLCicN3qgNcs/SIARsWuUkRGITKpwooHCigMKJAgqni4Bn2NMy0gHU19cuxt\
      xFQLW/ym2S5ivscRlpCeoxLrrU7jUxjFBbdjwkad674h664IY3UgLdpAeqk3lJ0ny\
      MvZ4jO6C5nGCPciOFsmx0YlRNhBWahwiAzx3dA7sttkvvBFNiTpe6Wg8msT2M+Ax/\
      nGJP6N6gaj0kaa5u3J82t/biGgeqCl4L1YyE7o/wuTH2ZLNeEPIjurH3lSPmOUF3e\
      RGqP5ZqPeyrjWSa63IJ1r3lXSwxR4Uz8f7osu5wXRFkq6Zbg9hqZ/B1E0Uem1Kpx1\
      gRkGpKnFU+YB5RdZhK10c7QWnJ3nqMtQKWTjRFYsBaZtvnSmjw76aFHE1wB/FqW6i\
      DApZOWreMqC7exXIm46+GNLoGjQQs8O3u48D3VqiVgORZ+28TKf2A1gIW+NADs4Wk\
      nri2gAUux0CVIx2ROBbuLGABUogRoz9uS3Wb8McmpU4N8wrhOi+HNCYg/XchDpXZN\
      s0GT6P2hWC+8Ta4UYzceGRawAIJTVEoTb8VAQscdQZGhy6SbqnTDlidE7UqYAFmo1\
      m747vNlMTmvQksApK7jsJ2QBxyAMEmYIGDSGrDKBx7BMguYAGeilEglcTYQoZdnAl\
      IbmI50zifBnMqYIGDWM4EXkxEeyFggYNpKx3mEM6LGhReCVjgoNfYBC8nm718vQxj\
      pxTdcddskLue+bhSwMsnsIyD5KTM0WTHNd4LWMCcXYp5JUCMgAWWYzmW+Msk4gQke\
      7GcsflFTkQKWGBo2sraDD8HogUs0Jy2chZ/mSQIAandKjInq9xsEYyABUfWcTpfZ2\
      qa4AQs2InlvIq/TBKsgAWqoxOicFuI6F87l4XLuRPd1QAAAABJRU5ErkJggg=="
      mediatype: "image/png"
  install:
    spec:
      deployments:
        - name: nexus-repository-ha-operator-certified
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: nexus-repository-ha-operator-certified
            strategy: {}
            template:
              metadata:
                labels:
                  name: nexus-repository-ha-operator-certified
              spec:
                containers:
                  - env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: nexus-repository-ha-operator-certified
                      - name: RELATED_IMAGE_NEXUS
                        value: {{certAppSHA}}
                      - name: NEXUS_DB_USER
                        valueFrom:
                          secretKeyRef:
                            name: nexus-repository-secret
                            key: nexusDatabaseUser
                      - name: NEXUS_DB_PASSWORD
                        valueFrom:
                          secretKeyRef:
                            name: nexus-repository-secret
                            key: nexusDatabasePassword
                      - name: NEXUS_DB_JDBC_RL
                        valueFrom:
                          secretKeyRef:
                            name: nexus-repository-secret
                            key: nexusJdbcUrl
                      - name: NEXUS_ADMIN_INITIAL_PASSWORD
                        valueFrom:
                          secretKeyRef:
                            name: nexus-repository-secret
                            key: nexusInitialAdminPassword
                      - name: NEXUS_LICENSE_BASE_64
                        valueFrom:
                          secretKeyRef:
                            name: nexus-repository-secret
                            key: nexus-repo-license
                      - name: NEXUS_POD_REPLICAS
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: nexus-pod-replicas
                      - name: NFS_PV_ENABLED
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: nfs-enabled
                      - name: LOCAL_PV_ENABLED
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: local-storage-enabled
                      - name: NFS_PROVISIONER
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: nfs-provisioner
                      - name: NFS_MOUNT_PATH
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: nfs-mount-path
                      - name: NFS_SERVER_IP
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: nfs-server-ip
                      - name: PVC_ACCESS_MODES
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: pvc-access-mode
                      - name: CLUSTER_NODE_NAMES
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: node-names
                      - name: LOCAL_PV_SIZE
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: local-pv-size
                      - name: PVC_SIZE
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: pvc-size
                      - name: STORAGE_RECLAIM_POLICY
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: storage-reclaim-policy
                      - name: NEXUS_SERVICE_ENABLED
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: nexus-service-enabled
                      - name: NEXUS_INGRESS_ENABLED
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: nexus-ingress-enabled
                      - name: NEXUS_INGRESS_HOST
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: nexus-ingress-host
                      - name: NEXUS_INGRESS_ADD_DEFAULT_RULE
                        valueFrom:
                          configMapKeyRef:
                            name: nexus-repository-config
                            key: nexus-ingress-add-defaultRule
                    image: {{operatorSHA}}
                    imagePullPolicy: Always
                    name: nexus-repository-ha-operator-certified
                    resources: {}
                serviceAccountName: nexus-repository-ha-operator-certified
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - ""
              resources:
                - configmaps
                - secrets
                - services
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
            - apiGroups:
              - sonatype.com
              resources:
                - nexusrepos
                - nexusrepos/status
                - nexusrepos/finalizers
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - storage.k8s.io
              resources:
                - storageclasses
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - secrets
                - persistentvolumes
                - services
              verbs:
                - '*'
            - apiGroups:
                - apps
              resources:
                - statefulsets
              verbs:
                - '*'
            - apiGroups:
                - networking.k8s.io
              resources:
                  - ingresses
              verbs:
                  - '*'
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - apps
              resourceNames:
                - nexus-repository-ha-operator-certified
              resources:
                - statefulsets/finalizers
              verbs:
                - update
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - statefulsets
              verbs:
                - get
          serviceAccountName: nexus-repository-ha-operator-certified
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - repository
    - sonatype
  links:
    - name: Nexus Repository Manager
      url: https://www.sonatype.com/product-nexus-repository
  maintainers:
    - email: support@sonatype.com
      name: Sonatype
  maturity: stable
  provider:
    name: Sonatype
  version: {{operatorVersion}}
