suite: test persistent volume
templates:
  - persistent-volume.yaml
release:
  name: "test-release"
chart:
  version: "latest"
tests:
  - it: should create local persistent volumes
    set:
      statefulset:
        replicaCount: 2
      nexusData:
        local:
          enabled: true
        nfs:
          enabled: false
    asserts:
      - isKind:
          of: PersistentVolume
      - equal:
          path: metadata.name
          value: "nexusrepo-local-storage-pv-0"
        documentIndex: 0

      - equal:
          path: metadata.name
          value: "nexusrepo-local-storage-pv-1"
        documentIndex: 1

      - equal:
          path: spec.capacity.storage
          value: "200Gi"
        documentIndex: 0
      - equal:
          path: spec.capacity.storage
          value: "200Gi"
        documentIndex: 1

      - equal:
          path: spec.volumeMode
          value: "Filesystem"
        documentIndex: 0

      - equal:
          path: spec.volumeMode
          value: "Filesystem"
        documentIndex: 1

      - equal:
          path: spec.accessModes
          value:
          - ReadWriteOnce
        documentIndex: 0

      - equal:
          path: spec.accessModes
          value:
            - ReadWriteOnce
        documentIndex: 1

      - equal:
          path: spec.persistentVolumeReclaimPolicy
          value: "Retain"
        documentIndex: 0

      - equal:
          path: spec.persistentVolumeReclaimPolicy
          value: "Retain"
        documentIndex: 1

      - equal:
          path: spec.storageClassName
          value: "nxrm-ha-latest-test-release-nexusrepo-storage"
        documentIndex: 0

      - equal:
          path: spec.storageClassName
          value: "nxrm-ha-latest-test-release-nexusrepo-storage"
        documentIndex: 1

      - equal:
          path: spec.local.path
          value: "/var/nexus-repo-mgr-work-dir/work0"
        documentIndex: 0

      - equal:
          path: spec.local.path
          value: "/var/nexus-repo-mgr-work-dir/work1"
        documentIndex: 1

      - equal:
          path: spec.nodeAffinity
          value:
            required:
              nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - "example-node-1"
                      - "example-node-2"
                      - "example-node-3"
        documentIndex: 0

      - equal:
          path: spec.nodeAffinity
          value:
            required:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: In
                      values:
                        - "example-node-1"
                        - "example-node-2"
                        - "example-node-3"
        documentIndex: 1

  - it: should create nfs persistent volumes
    set:
      nexusData:
        local:
          enabled: false
        nfs:
          enabled: true
    asserts:
      - isKind:
          of: PersistentVolume
      - equal:
          path: metadata.name
          value: "nexusrepo-nfs-storage-pv-0"

      - equal:
          path: spec.capacity.storage
          value: "200Gi"

      - equal:
          path: spec.volumeMode
          value: "Filesystem"

      - equal:
          path: spec.accessModes
          value:
            - ReadWriteMany

      - equal:
          path: spec.persistentVolumeReclaimPolicy
          value: "Retain"

      - equal:
          path: spec.storageClassName
          value: "nxrm-ha-latest-test-release-nexusrepo-storage"

      - equal:
          path: spec.mountOptions
          value:
            - hard
            - nfsvers=4.1

      - equal:
          path: spec.nfs.path
          value: /nexusdata/mountPath

      - equal:
          path: spec.nfs.server
          value: 70.71.156.85